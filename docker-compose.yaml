services:
  geoshop-back:
    build: ./geoshop-back
    depends_on:
      geoshop-back-db:
        condition: service_healthy
      geoshop-back-db-migrate:
        condition: service_completed_successfully
    env_file: ./geoshop-back/geoshop-back.env
    command: gunicorn wsgi -b :8000 --timeout 90
    ports:
      - 8000:8000
    healthcheck:
      test: curl -L --fail http://localhost:8000 || exit 1
      interval: 10s
      timeout: 10s
      retries: 15

  geoshop-back-db:
    image: postgis/postgis:14-3.2-alpine
    env_file: ./geoshop-back/geoshop-back.env
    volumes:
      - "./geoshop-back/db:/docker-entrypoint-initdb.d:ro"
    healthcheck:
      test: pg_isready -h 127.0.0.1 -U geoshop -d geoshop
      interval: 5s
      timeout: 5s
      retries: 5

  geoshop-back-db-migrate:
    build: ./geoshop-back
    depends_on:
      geoshop-back-db:
        condition: service_healthy
    env_file: ./geoshop-back/geoshop-back.env
    command: >
      bash -c "
      python3 manage.py migrate &&
      python3 manage.py fixturize &&
      python3 manage.py seed"

  geoshop-front:
    build: ./geoshop-front
    depends_on:
      geoshop-back:
        condition: service_healthy
    ports:
      - 8080:8080
    healthcheck:
      test: curl -L --fail http://localhost:8080/ || exit 1
      interval: 10s
      timeout: 10s
      retries: 15

  extract:
    build: ./extract
    depends_on:
      extract-db:
        condition: service_healthy
    environment:
      - JAVA_OPTS=-Xms1G -Xmx2G
        -Duser.language=en -Duser.region=CH -Dcom.sun.jndi.ldap.connect.pool.timeout=20000
      - ENCRYPTION_SECRET=12345678901234567890123456789012
      - ENCRYPTION_SALT=12345678901234567890123456789012
      - EXTERNAL_URL=http://localhost:8080/extract/
      - GEODATA_POSTGRES_HOST=extract-db
    ports:
      - 8081:8080
    healthcheck:
      test: curl -L --fail http://localhost:8080/extract || exit 1
      interval: 10s
      timeout: 10s
      retries: 15

  # Extract/Postgis
  extract-db:
    image: postgis/postgis:14-3.2-alpine
    environment:
      - POSTGRES_DB=extract
      - POSTGRES_USER=extractuser
      - POSTGRES_PASSWORD=demopassword
      - GEOSHOP_BACKEND=http://geoshop-back:8000
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U extractuser -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  extract-db-update:
    profiles: [dbupdate]
    image: postgis/postgis:14-3.2-alpine
    environment:
      - POSTGRES_HOST=extract-db
      - POSTGRES_DB=extract
      - POSTGRES_USER=extractuser
      - PGPASSWORD=demopassword
      - GEOSHOP_BACKEND=http://geoshop-back:8000
    depends_on:
      extract-db:
        condition: service_healthy
    volumes:
      - ./extract/db:/updatedb
    entrypoint: /updatedb/update.sh
