services:

  # Geoshop
  geoshop-back:
    build: ./geoshop-back
    depends_on:
      geoshop-back-db:
        condition: service_healthy
      geoshop-back-db-migrate:
        condition: service_completed_successfully
      zitadel:
        condition: service_started
    env_file: ./geoshop-back.env
    command: >
      bash -c "
      update-ca-certificates &&
      gunicorn wsgi -b :8000 --timeout 90"
    volumes:
      - ./volumes/geoshop-back/keys:/keys
      - ./volumes/cert:/usr/local/share/ca-certificates/geoshop
      - ./volumes/cert:/cert
    healthcheck:
      test: curl -L --fail http://localhost:8000/api || exit 1
      interval: 10s
      timeout: 10s
      retries: 15

  geoshop-back-db:
    image: postgis/postgis:14-3.2-alpine
    env_file: ./geoshop-back.env
    volumes:
      - ./volumes/geoshop-back/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -h 127.0.0.1 -U geoshop -d geoshop
      interval: 5s
      timeout: 5s
      retries: 5

  geoshop-back-db-migrate:
    build: ./geoshop-back
    depends_on:
      geoshop-back-db:
        condition: service_healthy
      zitadel:
        condition: service_started
    env_file: ./geoshop-back.env
    volumes:
      - ./volumes/cert:/usr/local/share/ca-certificates/geoshop
    command: >
      bash -c "
      update-ca-certificates &&
      python3 manage.py migrate &&
      python3 manage.py fixturize &&
      python3 manage.py seed"

  geoshop-front:
    build: ./geoshop-front
    depends_on:
      geoshop-back:
        condition: service_healthy
    volumes:
      - ./volumes/cert:/usr/local/share/ca-certificates/geoshop
      - ./volumes/cert:/cert
    healthcheck:
      test: curl -L --fail https://localhost/ || exit 1
      interval: 10s
      timeout: 10s
      retries: 15

  # Extract
  # Admin password is "Aa!1Aa!1""
  extract:
    image: nginx
    volumes:
      - ./extract/config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./volumes/cert:/usr/local/share/ca-certificates/geoshop
      - ./volumes/cert:/cert
    depends_on:
      extract-base:
        condition: service_healthy
    healthcheck:
      test: curl -L --fail https://extract/extract || exit 1
      interval: 10s
      timeout: 10s
      retries: 15

  extract-base:
    build: ./extract
    depends_on:
      extract-db:
        condition: service_healthy
      geoshop-back:
        condition: service_healthy
    environment:
      - JAVA_OPTS=-Xms1G -Xmx2G
        -Duser.language=en -Duser.region=CH -Dcom.sun.jndi.ldap.connect.pool.timeout=20000
      - ENCRYPTION_SECRET=12345678901234567890123456789012
      - ENCRYPTION_SALT=12345678901234567890123456789012
      - EXTERNAL_URL=https://extract
      - GEODATA_POSTGRES_HOST=extract-db
    volumes:
      - ./volumes/cert:/usr/local/share/ca-certificates/geoshop
      - ./volumes/cert:/cert
    healthcheck:
      test: curl -L --fail http://localhost:8080/extract || exit 1
      interval: 10s
      timeout: 10s
      retries: 15

  # Extract/Postgis
  extract-db:
    image: postgis/postgis:14-3.2-alpine
    environment:
      - POSTGRES_DB=extract
      - POSTGRES_USER=extractuser
      - POSTGRES_PASSWORD=demopassword
      - GEOSHOP_BACKEND=http://geoshop-back:8000
    volumes:
      - ./volumes/extract/postgres-data:/var/lib/postgresql/data
      - ./volumes/cert/geoshop-ca.crt:/usr/local/share/ca-certificates/geoshop-ca.crt
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U extractuser -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  extract-db-update:
    image: postgis/postgis:14-3.2-alpine
    environment:
      - POSTGRES_HOST=extract-db
      - POSTGRES_DB=extract
      - POSTGRES_USER=extractuser
      - PGPASSWORD=demopassword
      - GEOSHOP_BACKEND=http://geoshop-back:8000
    depends_on:
      extract-db:
        condition: service_healthy
    volumes:
      - ./extract/db:/updatedb
    entrypoint: /updatedb/update.sh

  selenium:
    image: selenium/standalone-firefox
    ports:
      - 5900:5900
    volumes:
      - ./volumes/cert/:/usr/local/share/ca-certificates/geoshop
      - ./volumes/cert:/cert
    healthcheck:
      test: curl --fail http://localhost:4444/ || exit 1
      interval: 10s
      timeout: 10s
      retries: 15

  # Zitadel
  # Default user:
  #   name: zitadel-admin@zitadel.zitadel
  #   password: Password1!
  zitadel:
    restart: 'always'
    image: 'ghcr.io/zitadel/zitadel:latest'
    command: 'start-from-setup --init-projections --masterkey "MasterkeyNeedsToHave32Characters" --config /config.yaml --steps /config.yaml'
    environment:
      ZITADEL_PORT: 443
      ZITADEL_EXTERNALPORT: 443
      ZITADEL_EXTERNALSECURE: true
      ZITADEL_TLS_ENABLED: true
      ZITADEL_TLS_CERTPATH: /cert/zitadel.crt
      ZITADEL_TLS_KEYPATH: /cert/zitadel.key

      # database configuration
      ZITADEL_DATABASE_POSTGRES_HOST: zitadel-db
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
    volumes:
      - ./zitadel/machinekey:/machinekey
      - ./zitadel/config.yaml:/config.yaml
      - ./volumes/cert:/cert
    ports:
      - 8443:443
    depends_on:
      zitadel-db:
        condition: 'service_healthy'

  zitadel-db:
    restart: 'always'
    image: postgres:17-alpine
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./volumes/zitadel/postgres-data:/var/lib/postgresql/data
      - ./volumes/cert:/usr/local/share/ca-certificates/geoshop
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
